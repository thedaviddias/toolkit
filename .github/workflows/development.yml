name: 'Development'

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
      - converted_to_draft

concurrency:
  group: pull-${{ github.ref }}-1
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ secrets.GH_DEPLOY_TOKEN }}

jobs:
  pull:
    name: 'Development'
    if: github.event.pull_request.draft == false && !contains(github.event.head_commit.message, '[skip ci]')
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_DEPLOY_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: 'Checkout'
        id: pull-checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 10

      - name: 'Init'
        id: pull-init
        uses: TheDavidDias/toolkit/.github/actions/init@main

      - name: 'Install'
        id: pull-install
        uses: TheDavidDias/toolkit/.github/actions/install@main

      - name: 'Commit Message'
        id: pull-commit-message
        run: |
          echo "message=$(git log --no-merges -1 --oneline)" >> $GITHUB_OUTPUT

      - name: 'Build'
        id: pull-build
        uses: TheDavidDias/toolkit/.github/actions/build@main
        with:
          BUILD_COMMAND: 'build'
